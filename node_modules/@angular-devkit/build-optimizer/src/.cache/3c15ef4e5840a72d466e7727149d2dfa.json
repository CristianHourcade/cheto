{"remainingRequest":"/opt/lampp/htdocs/dashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/opt/lampp/htdocs/dashboard/node_modules/mercadopago/lib/mercadopago.js","dependencies":[{"path":"/opt/lampp/htdocs/dashboard/node_modules/mercadopago/lib/mercadopago.js","mtime":1528162934000},{"path":"/opt/lampp/htdocs/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/opt/lampp/htdocs/dashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var configurations = require('./configurations');\nvar backwardSupport = require('./mercadopago-support')();\nvar utilsModule = require('./utils');\nvar paymentModule = require('./resources/payment');\nvar preferencesModule = require('./resources/preferences');\nvar preapprovalModule = require('./resources/preapproval');\nvar merchantOrdersModule = require('./resources/merchantOrders');\nvar moneyRequestsModule = require('./resources/moneyRequests');\nvar customersModule = require('./resources/customers');\nvar ipnModule = require('./resources/ipn');\nvar connectModule = require('./resources/connect');\nvar sdk;\nvar resources;\n\nfunction configure(options) {\n  configurations.configure(options);\n}\n\n// Backward compatibility method initialization\nsdk = module.exports = function () {\n  var options = {\n    // If it is the old version of the SDK, this support callbacks with Q library. This error isnt shown\n    show_promise_error: false\n  };\n\n  console.warn('This way of initializing the SDK is deprecated. Please change following the documentation');\n\n  if (arguments.length === 1) {\n    options.access_token = arguments[0];\n  } else if (arguments.length === 2) {\n    options.client_id = arguments[0];\n    options.client_secret = arguments[1];\n  } else {\n    throw new Error('Invalid arguments. Use CLIENT_ID and CLIENT SECRET, or ACCESS_TOKEN');\n  }\n\n  // Configure the SDK\n  try {\n    this.configure(options);\n  } catch (error) {\n    // Prevent double initialization error on client_id and client_secret\n  }\n};\n\n// When support is gone this is going to be the return literal from this class\nresources = {\n  configure: configure,\n  utils: utilsModule,\n  configurations: configurations,\n  payment: paymentModule,\n  preferences: preferencesModule,\n  preapproval: preapprovalModule,\n  merchant_orders: merchantOrdersModule,\n  customers: customersModule,\n  ipn: ipnModule,\n  connect: connectModule,\n  money_requests: moneyRequestsModule\n};\n\n// Adding modules to prototype and a static method - This is going to be delete\nObject.keys(resources).forEach(function (key) {\n  sdk[key] = resources[key];\n\n  /* istanbul ignore next */\n  sdk.prototype[key] = resources[key];\n});\n\n// Adding modules to prototype and a static method from support module - This is going to be delete\nObject.keys(backwardSupport).forEach(function (key) {\n  sdk[key] = backwardSupport[key];\n\n  /* istanbul ignore next */\n  sdk.prototype[key] = backwardSupport[key];\n});\n",null]}