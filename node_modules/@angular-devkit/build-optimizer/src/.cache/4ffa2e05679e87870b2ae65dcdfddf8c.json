{"remainingRequest":"/opt/lampp/htdocs/dashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/opt/lampp/htdocs/dashboard/node_modules/request-etag/lib/cache.js","dependencies":[{"path":"/opt/lampp/htdocs/dashboard/node_modules/request-etag/lib/cache.js","mtime":1453126776000},{"path":"/opt/lampp/htdocs/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/opt/lampp/htdocs/dashboard/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["'use strict';\r\n\r\nvar LRU = require('lru-cache');\r\nvar crypto = require('crypto');\r\nvar assign = require('lodash.assign');\r\n\r\nfunction createKey(input) {\r\n  var key = JSON.stringify(input);\r\n  return crypto.createHash('sha1').update(key).digest('hex');\r\n}\r\n\r\nfunction length(item, key) {\r\n  return (key ? key.length : 1) + JSON.stringify(item || 1).length;\r\n}\r\n\r\nfunction get(cache) {\r\n  return function (options) {\r\n    var cacheKey = createKey(options);\r\n    return cache.get(cacheKey);\r\n  };\r\n}\r\n\r\nfunction set(cache) {\r\n  return function (options, item) {\r\n    var cacheKey = createKey(options);\r\n    cache.set(cacheKey, item);\r\n  };\r\n}\r\n\r\nfunction Cache(config) {\r\n  var cache = new LRU(assign({ length: length }, config));\r\n  return {\r\n    get: get(cache),\r\n    set: set(cache),\r\n    reset: cache.reset.bind(cache)\r\n  };\r\n}\r\n\r\nmodule.exports = Cache;\r\n",null]}